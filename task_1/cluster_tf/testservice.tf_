locals {
  testservicerole_namespace = "staging"
}

resource "aws_iam_policy" "testservice_policy" {
  name   = "testservicerole-s3-access"
  policy = data.aws_iam_policy_document.testservicerole_policy.json
}

data "aws_iam_policy_document" "testservicerole_policy" {
  statement {
    actions = [
      "s3:ListBuckets",
    ]
    resources = ["*"]
  }
  statement {
    actions = [
      "s3:ListBucket",
    ]
    resources = [
      aws_s3_bucket.testbucket.arn,
      "${aws_s3_bucket.testbucket.arn}/*",
    ]
  }
}

module "service_account" {
  source                    = "../modules/service_account_iam"
  eks_cluster_name          = module.eks.cluster_id
  iam_policies              = [aws_iam_policy.testservice_policy.arn]
  oidc_provider_url         = local.oidc_provider_url
  service_account_name      = "testservice"
  service_account_namespace = local.testservicerole_namespace
}

resource "kubectl_manifest" "testservice_iam" {
  yaml_body = <<YAML
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testservice-iam-test
  namespace: ${local.testservicerole_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testservice-iam-test
  template:
    metadata:
      labels:
        app: testservice-iam-test
    spec:
      serviceAccountName: '${module.service_account.name}'
      containers:
        - name: testservice-iam-test
          image: 'sdscello/awscli:latest'
          ports:
            - containerPort: 80
YAML
}

resource "aws_s3_bucket" "testbucket" {
  bucket_prefix = "testbucket-"
}

output "s3_bucket_name" {
  value = aws_s3_bucket.testbucket.bucket
}

output "testservice_serviceaccount_name" {
  value = module.service_account.name
}